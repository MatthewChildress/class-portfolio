/*root and .darkMode create base CSS variables to be used with darkMode.js*/
:root {
  --body-bg: #e2e8f0;
  --card-bg: #6296eb;
  --text-color: #3f3f46;
  --skills-title: #93c5fd;
  --skills-title-active: #60a5fa;
  --skills-box: #f5f5f4;
}

.darkMode {
  --body-bg: #3f3f46;
  --card-bg: #605d9f;
  --text-color: #f1f5f9;
  --skills-title: #93c5fd;
  --skills-title-active: #60a5fa;
  --skills-box: #525252;
}

body {
  margin: 0px;
  padding: 0px;
  font-family: "Nunito", sans-serif;
  background: var(--body-bg);
  color: var(--text-color);
  line-height: 1.6;
  letter-spacing: 0.15em;
}

header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0.5em 1em;
}

nav {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  width: 80%;
}

.navButton {
  display: flex;
  justify-content: center;
  align-items: center;
}

.themeToggle {
  font-size: inherit;
  font-weight: bold;
  background-color: var(--skills-title);
  color: var(--text-color);
  border: none;
  padding: 0.5em 1em;
  border-radius: 2em;
}

.themeToggle:hover {
  background-color: var(--skills-title-active);
}

.navLists {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  list-style: none;
  gap: 4em;
  padding-right: 1em;
}

.navLink {
  text-decoration: none;
}

.navList {
  position: relative;
  
}

.navList:before {
  content: "";
  position: absolute;
  left: 1em;
  bottom: 0.3em;
  width: 90%;
  height: 0.5em;
  transform: skew(-12deg) translateX(-50%);
  background: var(--skills-box);
  z-index: -1;
}

.navList:hover, .navList:focus {
  width: 90%;
}

.navLink:visited {
  color: var(--text-color);
}

main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

article {
  width:50%;
}

.sectionTitle {
  font-size: 2rem;
}

.skills {
  width: 60%;
}

.skillsWrapper,
.heroWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

.skillTitle {
  background: var(--skills-title);
  font-size: 1.5rem;
  font-weight: bold;
  cursor: pointer;
  text-align: center;
  width: 100%;
  outline: none;
  transition: 0.5s;
}

/* "+" is a sibling combinator -- if .skillsBox is directly after .skillTitle, do this */
.skillTitle + .skillsBox {
  display: none;
}

/* Additionally here, same as above but if .is-open is added, then the CSS is now this */
.skillTitle.is-open + .skillsBox {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 4em;
  background-color: var(--skills-box);
  padding-top: 1.5em;
  width: 100%;
}

.skillTitle.is-open {
  border-bottom: 1px solid var(--text-color);
}

.skillTitle.is-open,
.skillTitle:hover {
  background-color: var(--skills-title-active);
}

.skillTitleText {
  padding-left: 1em;
}
.skillsList {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

.skillItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 5em;
}

.skillItem > i {
  font-size: 2em;
}

/* controls CSS for screen sizes under traditional tablet threshold */
@media only screen and (max-width: 768px) {
  body {
    letter-spacing: 0.1em;
  }
  header {
    display: flex;
    flex-direction: column;
  }
  .skills {
    width: 90%;
  }
  .skillTitle.is-open + .skillsBox {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 2em;
  }
}

/* The sizes between tablet and small laptops */
@media only screen and (min-width: 769px) and (max-width: 1280px) {
  .skills {
    width: 70%;
  }
  .skillTitle.is-open + .skillsBox {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 5rem;
    font-size: 0.8em;
  }
}
