/*root and .darkMode create base CSS variables to be used with darkMode.js*/
:root {
  --body-bg-primary: rgb(255, 255, 255);
  --body-bg-secondary: ;
  --body-bg-accent: ;
  --card-bg-primary: rgba(168, 230, 250, 0.35);
  --card-bg-secondary: rgba(245, 190, 229, 0.1);
  --card-bg-border: rgb(24, 32, 32);
  --text-color: rgb(24, 32, 32);
  --text-color-secondary: rgb(10, 160, 184);
  --text-color-title: rgb(23, 70, 126);
  --text-color-title-active: ;
  --text-accent: rgb(245, 190, 229);
  --text-color-accent:rgb(36, 171, 193) ;
  --skills-box: ;
}

.darkMode {
  --body-bg-primary: linear-gradient(to bottom right, rgba(195, 55, 100, .8), rgba(155, 79, 98, .5), rgba(29, 38, 113, .7)) ;
  --body-bg-secondary: ;
  --body-bg-accent: ;
  --card-bg: ;
  --text-color: #f4f4f4 ;
  --text-color-title: ;
  --text-color-title-active: ;
  --text-color-secondary: ;
  --skills-box: ;
}

body {
  margin: 0px;
  padding: 0px;
  font-family: "Nunito", sans-serif;
  background: var(--body-bg-primary);
  color: var(--text-color);
  line-height: 1.6;
  letter-spacing: 0.15em;
  font-variant: small-caps;
}

header {
  display: flex;
  justify-content: center;
  align-items:center;
}

.navBar {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0.25em 0.5em;
}

.navBar.sticky {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: var(--body-bg-primary);
  box-shadow: 0 1px 1px -1px gray;
}

.myLogo {
  display:flex;
  flex-direction: row;
  gap: 1em;
  align-items: center;
  font-size: 1em;
}

.myName {
  font-size: 2em;
  font-weight:bolder;
}

nav {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  width: 80%;
}



.navButton {
  display: flex;
  justify-content: center;
  align-items: center;
}

.themeToggle, .scrollBtn {
  align-items: center;
  background-color: var(--text-accent);
  border: 1px solid var(--card-bg-border);
  border-radius: 1em;
  box-sizing: border-box;
  color: var(--text-color);
  cursor: pointer;
  display: flex;
  font-size: 1em;
  font-weight: bold;
  height: 3em;
  justify-content: center;
  line-height: 1.5em;
  max-width: 100%;
  padding: 0 1.5em;
  position: relative;
  text-align: center;
  text-decoration: none;
  font-variant: small-caps;
}

.themeToggle:after {
  background-color: var(--text-color-accent);
  border-radius: 1em;
  content: "";
  display: block;
  height: 3em;
  left: 0;
  width: 100%;
  position: absolute;
  top: 0;
  transform: translate(0.25em, 0.25em);
  transition: transform .2s ease-out;
  z-index: -1;
}

.themeToggle:hover:after {
  transform: translate(0,0);
}
.themeToggle:active {
  background-color: var(--text-accent);
  outline: 0;
}
.themeToggle:hover {
  outline: 0;
}

.navLists {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items:center;
  list-style: none;
  gap: 4em;
  padding-right: 1em;
}

.navList {
  padding: 0 1em;
}

.navLink {
  font-size: 1.25em;
  font-weight:bold;
  text-decoration: none;
  position: relative;
  display: inline-flex;
  z-index: 1;
  color: var(--text-color-accent);
}

.navLink:before {
  content: '';
  position: absolute;
  display: flex;
  bottom: 0.15em;
  left: 1.75em;
  height: 25%;
  width: 0;
  z-index: -1;
  transform: skew(-12deg) translateX(-50%);
  background: var(--text-accent);
  transition: .4s;
}

.navLink:hover:before {
  width: calc(100% + 1em);
}

main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.sections {
  padding-top: 15em;
}

.heroWrapper {
  margin-top: 10em;
}

.heroBox {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 1em;
}

.jobTitle {
  color: var(--text-color-title);
  font-size: 3em;
}

article {
  background-color: var(--card-bg-primary);
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  width:50%;
}

article > p {
  width: 60%;
}

.emphasis {
  font-size: 1.25em;
  font-weight: bolder;
  color: var(--text-color-accent);
}

.heroImage {
  width: 25rem;
}

.sectionTitle {
  font-size: 3rem;
  color: var(--text-color-title);
}

.skills {
  width: 60%;
}

.skillsWrapper,
.heroWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

.skillTitle {
  background: var(--card-bg-primary);
  font-size: 1.5rem;
  font-weight: bold;
  cursor: pointer;
  text-align: center;
  width: 100%;
  outline: none;
  transition: 0.5s;
}

/* "+" is a sibling combinator -- if .skillsBox is directly after .skillTitle, do this */
.skillTitle + .skillsBox {
  display: none;
}

/* Additionally here, same as above but if .is-open is added, then the CSS is now this */
.skillTitle.is-open + .skillsBox {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 4em;
  background-color: var(--card-bg-secondary);
  padding-top: 1.5em;
  width: 100%;
}

.skillTitle.is-open {
/*   border-bottom: 1px solid var(--text-color); */
}

.skillTitle.is-open,
.skillTitle:hover {
/*   background-color: var(--skills-title-active); */
}

.skillTitleText {
  padding-left: 1em;
}
.skillsList {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

.skillItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 5em;
}

.skillItem > i {
  font-size: 2em;
}

/* controls CSS for screen sizes under traditional tablet threshold */
@media only screen and (max-width: 768px) {
  body {
    letter-spacing: 0.1em;
  }
  header {
    display: flex;
    flex-direction: column;
  }
  .skills {
    width: 90%;
  }
  .skillTitle.is-open + .skillsBox {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 2em;
  }
}

.scrollBtn {
  position: fixed;
  z-index: 99;
  bottom: 1.7em;
  right: 1.5em;
  display: none;
}

/* The sizes between tablet and small laptops */
@media only screen and (min-width: 769px) and (max-width: 1280px) {
  .skills {
    width: 70%;
  }
  .skillTitle.is-open + .skillsBox {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 5rem;
    font-size: 0.8em;
  }
}
